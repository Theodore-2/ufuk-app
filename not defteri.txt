profil
import { View, Text, StyleSheet, FlatList, Dimensions, Pressable } from "react-native";
import { LinearGradient } from "expo-linear-gradient";
import { useTheme } from "./theme/ThemeContext";
import { Colors } from "../../constants/Colors";
import { useRouter } from "expo-router";

const { height } = Dimensions.get("window");

export default function ProfileScreen() {
  const { theme } = useTheme();
  const colors = Colors[theme as "light" | "dark"];
  const router = useRouter(); 

  const student = {
    name: "Arda Ã‡imen",
    phone: "+90 555 123 4567",
    studentNo: "202100123",
    lessons: [
      { id: "1", name: "Matematik I" },
      { id: "2", name: "Fizik II" },
      { id: "3", name: "Programlama Temelleri" },
      { id: "4", name: "Veri TabanÄ± YÃ¶netim Sistemleri" },
    ],
    debt: 1250,
  };

  return (
    <View style={[styles.container, { backgroundColor: colors.background }]}>
      {/* Header */}
      <LinearGradient colors={colors.headerGradient} style={styles.header}>
        <Text style={[styles.name, { color: colors.headerText }]}>{student.name}</Text>
        <Text style={[styles.subText, { color: colors.headerSubText }]}>
          Ã–ÄŸrenci No: {student.studentNo}
        </Text>
        <Text style={[styles.subText, { color: colors.headerSubText }]}>
          {student.phone}
        </Text>
      </LinearGradient>

      {/* AldÄ±ÄŸÄ± Dersler */}
      <View style={[styles.section, { backgroundColor: colors.cardBackground }]}>
        <Text style={[styles.sectionTitle, { color: colors.text }]}>AldÄ±ÄŸÄ± Dersler</Text>
        <FlatList
          data={student.lessons}
          keyExtractor={(item) => item.id}
          renderItem={({ item }) => (
            <View style={styles.lessonItem}>
              <Text style={[styles.lessonText, { color: colors.text }]}>
                â€¢ {item.name}
              </Text>
            </View>
          )}
        />
      </View>

      {/* BorÃ§ Durumu */}
      <View style={[styles.section, { backgroundColor: colors.cardBackground }]}>
        <Text style={[styles.sectionTitle, { color: colors.text }]}>BorÃ§ Durumu</Text>
        <Text style={[styles.subText, { color: colors.text }]}> Detay GÃ¶rÃ¼ntÃ¼le</Text>
        <Pressable
          onPress={() => router.push("/debt_details")}
          style={[
            styles.debtBox,
            { backgroundColor: theme === "light" ? "#ffe6e6" : "#662222" },
          ]}
        >
          <Text style={styles.debtText}>{student.debt} TL</Text>
        </Pressable>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1 },
  header: {
    height: height * 0.18,
    paddingHorizontal: 20,
    paddingTop: height * 0.02,
    justifyContent: "center",
    alignItems: "center",
    borderBottomLeftRadius: 20,
    borderBottomRightRadius: 20,
  },
  name: {
    fontSize: 35,
    fontWeight: "bold",
    marginBottom: 5,
  },
  subText: {
    fontSize: 13,
  },
  section: {
    marginTop: 20,
    marginHorizontal: 15,
    padding: 15,
    borderRadius: 12,
    shadowColor: "#000",
    shadowOpacity: 0.05,
    shadowRadius: 5,
    elevation: 3,
  },
  sectionTitle: {
    fontSize: 23,
    fontWeight: "600",
    marginBottom: 10,
  },
  lessonItem: {
    paddingVertical: 5,
  },
  lessonText: {
    fontSize: 16,
  },
  debtBox: {
    padding: 15,
    borderRadius: 8,
    alignItems: "center",
  },
  debtText: {
    fontSize: 20,
    fontWeight: "bold",
    color: "#cc0000",
  },
});






duyurular
import { View, Text, FlatList, StyleSheet, Dimensions } from "react-native";
import { LinearGradient } from "expo-linear-gradient";
import { useTheme } from "./theme/ThemeContext";
import { Colors } from "../../constants/Colors";

const { height } = Dimensions.get("window");

const dummyAnnouncements = [
  { id: "1", title: "ðŸ“¢ Matematik SÄ±navÄ±", content: "YarÄ±n saat 10:00â€™da yapÄ±lacaktÄ±r." },
  { id: "2", title: "ðŸ“¢ Fizik Dersi Ä°ptal", content: "BugÃ¼nkÃ¼ ders hava muhalefeti nedeniyle iptal edildi." },
  { id: "3", title: "ðŸ“¢ Yeni Ders Eklendi", content: "â€˜Yapay Zeka Temelleriâ€™ dersi haftaya baÅŸlÄ±yor." },
];

export default function AnnouncementsScreen() {
  const { theme } = useTheme();
  const colors = Colors[theme as "light" | "dark"];

  return (
    <View style={[styles.container, { backgroundColor: colors.background }]}>
      <LinearGradient colors={colors.headerGradient} style={styles.header}>
        <Text style={[styles.headerTitle, { color: colors.headerText }]}>Hocalardan Duyurular</Text>
        <Text style={[styles.headerSub, { color: colors.headerSubText }]}>
          GÃ¼ncel bildirimleri burada bulabilirsiniz
        </Text>
      </LinearGradient>

      <FlatList
        data={dummyAnnouncements}
        keyExtractor={(item) => item.id}
        contentContainerStyle={{ padding: 20 }}
        renderItem={({ item }) => (
          <View style={[styles.card, { backgroundColor: colors.cardBackground }]}>
            <Text style={[styles.title, { color: colors.text }]}>{item.title}</Text>
            <Text style={[styles.content, { color: colors.subText }]}>{item.content}</Text>
          </View>
        )}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1 },
  header: {
    height: height * 0.18,
    paddingHorizontal: 20,
    paddingTop: height * 0.02,
    justifyContent: "center",
    alignItems: "center",
    borderBottomLeftRadius: 20,
    borderBottomRightRadius: 20,
  },
  headerTitle: { fontSize: 24, fontWeight: "bold" },
  headerSub: { fontSize: 14, marginTop: 5 },
  card: {
    padding: 15,
    borderRadius: 12,
    marginBottom: 12,
    shadowColor: "#000",
    shadowOpacity: 0.05,
    shadowRadius: 3,
    elevation: 2,
  },
  title: { fontSize: 16, fontWeight: "bold" },
  content: { fontSize: 14, marginTop: 4 },
});






tabs/layout
import { Tabs } from "expo-router";
import { Ionicons } from "@expo/vector-icons";
import { useTheme } from "./theme/ThemeContext";
import { Colors } from "../../constants/Colors";

export default function TabsLayout() {
  const { theme } = useTheme();
  const colors = Colors[theme as "light" | "dark"] || Colors.light;

  return (
    <Tabs
      screenOptions={{
        tabBarActiveTintColor: colors.tabIconSelected,
        tabBarInactiveTintColor: colors.tabIconDefault,
        tabBarStyle: {
          backgroundColor: colors.background,
          borderTopWidth: 0,
        },
        headerShown: false,
      }}
    >
      <Tabs.Screen
        name="index"
        options={{
          title: "Anasayfa",
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="home" size={size} color={color} />
          ),
        }}
      />
      <Tabs.Screen
        name="schedule"
        options={{
          title: "Ders ProgramÄ±",
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="calendar" size={size} color={color} />
          ),
        }}
      />
      <Tabs.Screen
        name="lesson_request"
        options={{
          title: "Ders Talebi",
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="create" size={size} color={color} />
          ),
        }}
      />
      
      <Tabs.Screen
        name="announcements"
        options={{
          title: "Duyurular",
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="megaphone-outline" size={size} color={color} />
          ),
        }}
      />

      <Tabs.Screen
        name="profile"
        options={{
          title: "Profil",
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="person" size={size} color={color} />
          ),
        }}
      />
    </Tabs>

    
  );
}